
#Использовать json
#Использовать logos
#Использовать strings

Перем мСоединение;
Перем мЗаголовки;
Перем мПараметры;
Перем мДопустимыйКодСостояния;

Перем Лог;

Процедура ИспользоватьСоединение(Знач Соединение) Экспорт
	мСоединение = Соединение;
КонецПроцедуры

Функция Получить(Знач Ресурс) Экспорт
	
	Ресурс = ДобавитьПараметрыЗапросаВРесурсЗапроса(Ресурс);
	HTTPЗапрос = ПолучитьHTTPЗапрос(Ресурс);
	ЛогироватьВыполнениеЗапроса("GET", HTTPЗапрос);

	Ответ = мСоединение.Получить(HTTPЗапрос);
	Возврат ПрочитатьОтветЗапроса(Ответ);
	
КонецФункции

Функция Отправить(Знач Ресурс) Экспорт

	Ресурс = ДобавитьПараметрыЗапросаВРесурсЗапроса(Ресурс);
	
	HTTPЗапрос = ПолучитьHTTPЗапрос(Ресурс);
	ЛогироватьВыполнениеЗапроса("POST", HTTPЗапрос);
	
	Ответ = мСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	Возврат ПрочитатьОтветЗапроса(Ответ);
	
КонецФункции

Процедура УстановитьЗаголовки(Знач Заголовки) Экспорт
	мЗаголовки = Заголовки;
КонецПроцедуры

Процедура ДобавитьПараметр(Знач Ключ, Знач Значение) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат;
	КонецЕсли;
	мПараметры.Добавить(Новый Структура("Ключ, Значение", Ключ, Значение));
	
КонецПроцедуры

Процедура УстановитьДопустимыйКодСостояния(Знач КодСостояния) Экспорт
	мДопустимыйКодСостояния = КодСостояния;
КонецПроцедуры

Функция ПолучитьHTTPЗапрос(Знач Ресурс) Экспорт
	Возврат Новый HTTPЗапрос(Ресурс, мЗаголовки);
КонецФункции

/////////////////////////////////////////////////////////

Функция ЛогироватьВыполнениеЗапроса(Знач ТипОперации, Знач HTTPЗапрос)

	ЗаголовкиЗапроса = "";
	Для Каждого ЗаголовокЗапроса Из HTTPЗапрос.Заголовки Цикл
		ЗаголовкиЗапроса = ЗаголовкиЗапроса + ЗаголовокЗапроса.Ключ + ": " + ЗаголовокЗапроса.Значение;
	КонецЦикла;

	Лог.Отладка("Выполняю %1-запрос: %2:%3/%4", ТипОперации, мСоединение.Сервер, мСоединение.Порт, HTTPЗапрос.АдресРесурса);
	Лог.Отладка("Заголовки запроса:
		|%1", ЗаголовкиЗапроса);
	Лог.Отладка("Тело запроса:
		|%1", HTTPЗапрос.ПолучитьТелоКакСтроку());

КонецФункции

Функция ПрочитатьОтветЗапроса(Знач Ответ)
	
	ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
	Лог.Отладка("Код состояния: %1", Ответ.КодСостояния);
	Лог.Отладка("Тело ответа: 
		|%1", ТелоОтвета);
	
	Если Ответ.КодСостояния <> мДопустимыйКодСостояния Тогда
		ТекстСообщения = СтрШаблон(
			"Получен код возврата: %1
			|Тело ответа: %2", 
			Ответ.КодСостояния,
			ТелоОтвета
		);
		ИнфИсключение = Новый ИнформацияОбОшибке(ТекстСообщения, Ответ);
		ВызватьИсключение ИнфИсключение;
	КонецЕсли;

	Результат = Неопределено;
	Если ЗначениеЗаполнено(ТелоОтвета) Тогда
		Парсер = Новый ПарсерJSON;
		Результат = Парсер.ПрочитатьJSON(ТелоОтвета);
	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция ДобавитьПараметрыЗапросаВРесурсЗапроса(Знач Ресурс)
	
	Если мПараметры.Количество() = 0 Тогда
		Возврат Ресурс;
	КонецЕсли;
	
	Ресурс = Ресурс + "?";
	
	Для Каждого ПараметрЗапроса из мПараметры Цикл
		Ресурс = Ресурс + ПараметрЗапроса.Ключ + "=" + ПараметрЗапроса.Значение + "&";
	КонецЦикла;
	
	СтроковыеФункции.УдалитьПоследнийСимволВСтроке(Ресурс);
	
	Возврат Ресурс;

КонецФункции

/////////////////////////////////////////////////////////
мЗаголовки = Новый Соответствие;
мПараметры = Новый Массив;
мДопустимыйКодСостояния = 200;
Лог = Логирование.ПолучитьЛог("oscript.lib.restler");
